import cv2

def detect_smile():
    # Load the cascade classifiers for face and smile detection
    face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
    smile_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_smile.xml')
    
    # Start the camera
    camera = cv2.VideoCapture(0)
    
    while True:
        # Read a frame from the camera
        _, frame = camera.read()
        
        # Convert the frame to grayscale
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        
        # Detect faces in the frame
        faces = face_cascade.detectMultiScale(gray, 1.3, 5)
        
        # Process each detected face
        for (x, y, w, h) in faces:
            # Draw a rectangle around the face
            cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)
            
            # Extract the face region of interest
            roi_gray = gray[y:y+h, x:x+w]
            roi_color = frame[y:y+h, x:x+w]
            
            # Detect smiles in the face region
            smiles = smile_cascade.detectMultiScale(roi_gray, 1.8, 20)
            
            # If a smile is detected, capture a selfie
            if len(smiles) > 0:
                # Save the selfie image
                cv2.imwrite("selfie.jpg", frame)
                
                # Display a message
                cv2.putText(frame, "Smile detected! Selfie captured.", (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0, 255, 0), 2)
        
        # Display the frame
        cv2.imshow("Smile Detection", frame)
        
        # Check for key press (press 'q' to quit)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
    
    # Release the camera
    camera.release()
    cv2.destroyAllWindows()

# Call the detect_smile function to start smile detection and capture selfies
detect_smile()
